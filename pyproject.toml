[project]
name = "marvin"
dynamic = ["version"]
description = "A lightweight AI engineering toolkit for building natural language interfaces that are reliable, scalable, and easy to trust."
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["ai", "chatbot", "llm", "NLP", "natural language processing"]
requires-python = ">=3.9"
dependencies = [
    "cachetools>=5",
    "fastapi",
    "httpx>=0.24.1",
    "jinja2>=3.1.2",
    "jsonpatch>=1.33",
    "openai>=1.21.0",
    "prompt-toolkit>=3.0.33",
    "pydantic>=2.4.2",
    "pydantic_settings",
    "rich>=12",
    "tiktoken>=0.4.0",
    "typer>=0.9.0",
    "typing_extensions>=4.0.0",
    # need for windows
    "tzdata>=2023.3",
    "uvicorn>=0.22.0",
    "partialjson>=0.0.5",
]

[project.optional-dependencies]
generator = ["datamodel-code-generator>=0.20.0"]
chromadb = ["chromadb"]
prefect = ["prefect>=2.14.9"]
dev = [
    "marvin[tests]",
    "black[jupyter]",
    "ipython",
    "mkdocs-autolinks-plugin~=0.7",
    "mkdocs-awesome-pages-plugin~=2.8",
    "mkdocs-markdownextradata-plugin~=0.2",
    "mkdocs-jupyter>=0.24.1",
    "mkdocs-material[imaging]>=9.1.17",
    "mkdocstrings[python]~=0.22",
    "pdbpp~=0.10",
    "pre-commit>=2.21,<4.0",
    "pydantic[dotenv]",
    "ruff",
]
tests = [
    "pytest-asyncio>=0.18.2,!=0.22.0,<0.23.0",
    "pytest-env>=0.8,<2.0",
    "pytest-rerunfailures>=10,<14",
    "pytest-sugar>=0.9,<2.0",
    "pytest~=7.3.1",
    "pytest-timeout",
    "pytest-xdist",
]
audio = [
    "SpeechRecognition>=3.10",
    "PyAudio>=0.2.11",
    "pydub>=0.25",
    "simpleaudio>=1.0",
]
video = ["opencv-python >= 4.5"]

slackbot = ["marvin[prefect]", "numpy", "raggy", "turbopuffer==0.1.18"]

[project.urls]
Code = "https://github.com/prefecthq/marvin"
Documentation = "https://www.askmarvin.ai"

[project.scripts]
marvin = "marvin.cli:app"

[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/marvin/_version.py"

# pytest configuration
[tool.pytest.ini_options]
markers = [
    "llm: indicates that a test calls an LLM (may be slow).",
    "no_llm: indicates that a test does not require an LLM.",
]
timeout = 20
testpaths = ["tests"]

norecursedirs = [
    "*.egg-info",
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".vscode",
    "node_modules",
]

asyncio_mode = 'auto'

filterwarnings = [
    "ignore:'crypt' is deprecated and slated for removal in Python 3.13:DeprecationWarning",
]
env = [
    "MARVIN_TEST_MODE=1",
    # use 3.5 for tests by default
    'D:MARVIN_CHAT_COMPLETIONS_MODEL=gpt-3.5-turbo',
    'D:MARVIN_CHAT_COMPLETIONS_TEMPERATURE=0.0',
    'D:MARVIN_LOG_VERBOSE=1',
    'D:MARVIN_LOG_LEVEL=DEBUG',
    'PYTEST_TIMEOUT=20',
]

# black configuration
[tool.black]
preview = true

# ruff configuration
[tool.ruff]
target-version = "py39"
lint.extend-select = ["I"]
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$" # default, but here in case we want to change it

[tool.ruff.format]
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ['I', 'F401', 'E402']
"conftest.py" = ["F401", "F403"]
'tests/fixtures/*.py' = ['F403']
