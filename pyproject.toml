[project]
name = "marvin"
dynamic = ["version"]
description = "A lightweight AI engineering framework for building natural language interfaces that are reliable, scalable, and easy to trust."
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["ai", "chatbot", "llm"]
requires-python = ">=3.9"
dependencies = [
  "beautifulsoup4>=4.12.2",
  "fastapi>=0.98.0",
  "httpx>=0.24.1",
  "jinja2>=3.1.2",
  "jsonpatch>=1.33",
  "openai>=0.27.8",
  "pydantic[dotenv]>=1.10.7",
  "rich>=12",
  "tiktoken>=0.4.0",
  "typer>=0.9.0",
  "tzdata>=2023.3", # need for windows
  "uvicorn>=0.22.0"
]

[project.optional-dependencies]
generator = ["datamodel-code-generator>=0.20.0"]
dev = [
    "marvin[tests]",
    "black[jupyter]",
    "ipython",
    "mkdocs-autolinks-plugin~=0.7",
    "mkdocs-awesome-pages-plugin~=2.8",
    "mkdocs-markdownextradata-plugin~=0.2",
    "mkdocs-jupyter>=0.24.1",
    "mkdocs-material>=9.1.17",
    "mkdocstrings[python]~=0.22",
    "pdbpp~=0.10",
    "pre-commit>=2.21,<4.0",
    "pydantic[dotenv]",
    "ruff",
]
tests = [
    "marvin[openai,anthropic]",
    "pytest-asyncio~=0.20",
    "pytest-env>=0.8,<2.0",
    "pytest-rerunfailures>=10,<13",
    "pytest-sugar~=0.9",
    "pytest~=7.3.1",
]

framework = [
    "aiosqlite>=0.19.0",
    "alembic>=1.11.1",
    "bcrypt>=4.0.1",
    "gunicorn>=20.1.0",
    "prefect>=2.10.17",
    "sqlalchemy>=2.0.17"
]
openai = ["openai>=0.27.8", "tiktoken>=0.4.0"]
anthropic = ["anthropic>=0.3"]
lancedb = ["lancedb>=0.1.8"]
slackbot = ["cachetools>=5.3.1", "numpy>=1.21.2"]
ddg = ["duckduckgo_search>=3.8.3"]
serpapi = ["google-search-results>=2.4.2"]

[project.urls]
Code = "https://github.com/prefecthq/marvin"
Documentation = "https://www.askmarvin.ai"

[project.scripts]
marvin = "marvin.cli:app"

[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/marvin/_version.py"

# pytest configuration
[tool.pytest.ini_options]
markers = ["llm: indicates that a test calls an LLM (may be slow)."]

testpaths = ["tests"]

norecursedirs = [
    "*.egg-info",
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".vscode",
    "node_modules",
]

asyncio_mode = 'auto'

filterwarnings = [
    "ignore:'crypt' is deprecated and slated for removal in Python 3.13:DeprecationWarning",
]
env = [
    "MARVIN_TEST_MODE=1",
    "MARVIN_LOG_CONSOLE_WIDTH=120",
    # use 3.5 for tests by default
    'D:MARVIN_LLM_MODEL=gpt-3.5-turbo',
    'MARVIN_LLM_TEMPERATURE=0.0',
]

# black configuration
[tool.black]
preview = true

# ruff configuration
[tool.ruff]
extend-select = ["I"]

[tool.ruff.per-file-ignores]
"__init__.py" = ['I', 'F401', 'E402']
"conftest.py" = ["F401", "F403"]
'tests/fixtures/*.py' = ['F403']
